parameters:
  - name: stageName
    type: string
  - name: dependsOn
    type: string
  - name: displayName
    type: string
  - name: pauseForCodeReview
    type: boolean
    default: false
  - name: generateDriftAndChangeReport
    type: boolean
    default: false
  - name: staticCodeAnalysis
    type: boolean
    default: false
  - name: variableGroupName
    type: string
  - name: agentPool
    type: string
  - name: artifactName
    type: string
  - name: flyway
    type: string
  - name: workingDirectory
    type: string

stages:
  - stage: ${{ parameters.stageName }}
    pool: ${{ parameters.agentPool }}
    dependsOn: ${{ parameters.dependsOn }}
    jobs:
      - job: PreRelease
        displayName: Release Preview
        variables:
        - group: ${{ parameters.variableGroupName }}
        - group: rg_flyway_vars
        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: '${{ parameters.artifactName }}'
              downloadPath: '$(System.ArtifactsDirectory)'
      
      - job: ChangeReport
        dependsOn: 'PreRelease'
        displayName: Change Report With Code Analysis
        condition: eq(parameters.staticCodeAnalysis, true)
        variables:
        - group: ${{ parameters.variableGroupName }}
        - group: rg_flyway_vars
        steps:
          # pip throws an error if an update is pending, hence continueOnError set to true
          - script: 'pip install sqlfluff==1.3.2'
            displayName: 'Install SQL Fluff'
            continueOnError: true
          
          - script: '${{ parameters.flyway }} check -dryrun -changes -drift -code -check.failOnDrift="${{parameters.failReleaseIfDriftDetected}}" -check.buildUrl="$(check_JDBC)" -check.buildUser="$(check_userName)" -check.buildPassword="$(check_password)" -url="$(target_database_JDBC)" -check.reportFilename="$(System.ArtifactsDirectory)\$(databaseName)-$(Build.BuildId)-Drift-And-Change-Report.html"'
            workingDirectory: '${{ parameters.workingDirectory }}'
            failOnStderr: true
            displayName: 'Drift And Change Report'
            env:
              FLYWAY_CLEAN_DISABLED: false
          
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Drift And Change Report'
            condition: always()
            inputs:
              ArtifactName: 'Drift And Change Report'
              PathtoPublish: '$(System.ArtifactsDirectory)\$(databaseName)-$(Build.BuildId)-Drift-And-Change-Report.html'
      
      - job: ChangeReport
        condition: and(eq( parameters.generateDriftAndChangeReport, true), eq( parameters.staticCodeAnalysis, false))
        displayName: Change Report
        dependsOn: 'PreRelease'
        variables:
        - group: ${{parameters.variableGroupName}}
        - group: rg_flyway_vars
        steps:
          - script: '${{ parameters.flyway }} check -dryrun -changes -drift -check.failOnDrift="${{parameters.failReleaseIfDriftDetected}}" -check.buildUrl="$(check_JDBC)" -check.buildUser="$(check_userName)" -check.buildPassword="$(check_password)" -url="$(target_database_JDBC)" -check.reportFilename="$(System.ArtifactsDirectory)\$(databaseName)-$(Build.BuildId)-Drift-And-Change-Report.html"'
            workingDirectory: '${{ parameters.workingDirectory }}'
            failOnStderr: true
            displayName: 'Drift And Change Report'
            env:
              FLYWAY_CLEAN_DISABLED: false
          
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Drift And Change Report'
            condition: always()
            inputs:
              ArtifactName: 'Drift And Change Report'
              PathtoPublish: '$(System.ArtifactsDirectory)\$(databaseName)-$(Build.BuildId)-Drift-And-Change-Report.html'
      
      - job: ChangeReport
        condition: and(eq( parameters.generateDriftAndChangeReport, false), eq( parameters.staticCodeAnalysis, false))
        displayName: Change Report
        dependsOn: 'PreRelease'
        variables:
        - group: ${{parameters.variableGroupName}}
        - group: rg_flyway_vars
        steps:
          - script: '${{ parameters.flyway }} check -dryrun -url="$(target_database_JDBC)" -check.reportFilename="$(System.ArtifactsDirectory)\$(databaseName)-$(Build.BuildId)-Drift-And-Change-Report.html"'
            workingDirectory: '${{ parameters.workingDirectory }}'
            failOnStderr: true
            displayName: 'Drift And Change Report'
            env:
              FLYWAY_CLEAN_DISABLED: false
          
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Drift And Change Report'
            condition: always()
            inputs:
              ArtifactName: 'Drift And Change Report'
              PathtoPublish: '$(System.ArtifactsDirectory)\$(databaseName)-$(Build.BuildId)-Drift-And-Change-Report.html'
      
      - job: CodeReview
        condition: eq(parameters.pauseForCodeReview, true)
        displayName: Code Review
        dependsOn: 'ChangeReport'
        pool: server
        steps:
          - task: ManualValidation@0
            displayName: 'Review Change Report Prior To Release'
            timeoutInMinutes: 4320 # job times out in 1 hour
            inputs:
              notifyUsers: |
                user@email.com
                example@example.com
              instructions: 'Review changes'
      
      - job: CodeReview
        condition: eq(parameters.pauseForCodeReview, false)
        pool: server
        displayName: Skipping Code Review
        dependsOn: 'ChangeReport'
      
      - job: Deploy
        displayName: Deployment
        dependsOn: 'CodeReview'
        variables:
        - group: ${{parameters.variableGroupName}}
        - group: rg_flyway_vars
        steps:
          - script: '${{ parameters.flyway }} info migrate -outOfOrder=true info -url="$(target_database_JDBC)" -baselineVersion=$(BASELINE_VERSION)'
            workingDirectory: ${{ parameters.workingDirectory }}
            displayName: ${{parameters.displayName}}
            failOnStderr: true
            env:
              FLYWAY_CLEAN_DISABLED: true 